services:
  product_db:
    image: postgres:17
    restart: always
    env_file: ".env"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - store-network

  flyway:
    image: flyway/flyway:11.12
    depends_on:
      product_db:
        condition: service_healthy
    volumes:
      - ./migrations:/flyway/sql
    command: >
      -url=jdbc:postgresql://$POSTGRES_DB:5432/$POSTGRES_DB
      -user=$POSTGRES_USER
      -password=$POSTGRES_PASSWORD
      migrate
    env_file: ".env"
    networks:
      - store-network

  product-service:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      product_db:
        condition: service_healthy
    env_file: ".env"
    ports:
      - "8081:8081"
    volumes:
      - ./src:/app/src
      - ~/.m2:/root/.m2
    networks:
      - store-network

  pgadmin:
    image: dpage/pgadmin4:9.8.0
    restart: always
    env_file: ".env"
    depends_on:
      product_db:
        condition: service_healthy
    ports:
      - "7777:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - store-network

volumes:
  db_data:
  pgadmin_data:

networks:
  store-network:
    external: true